* Running...

To run the server, do

 cabal run

Some http requests you can make against the server...

You can get the list of switches like this (should return empty list on first time):
 curl localhost:3000/switches

You can add a switch by posting a switch object (in JSON format) to addswitch URL. The switch1.json and switch2.json files have two example switches inside:

 curl -H "Accept: application/json" -H "Content-Type: application/json" -X POST -d @switch1.json localhost:3000/addswitch
 curl -H "Accept: application/json" -H "Content-Type: application/json" -X POST -d @switch2.json localhost:3000/addswitch

You can delete a switch by doing a DELETE HTTP request to the switch URL; I.e. to delete switch with ID 666, do:

 curl -H "Accept: application/json" -H "Content-Type: application/json" -X DELETE localhost:3000/switch/666



* Tests

I added a set of quickcheck tests for the code to show how they can be used. You can run them with

 cabal test

If that fails, you may be missing some of the libraries needed to run the tests. If so, run:

 cabal install --only-dependencies --enable-tests

Then try 'cabal test' again.

You can see the tests in tests/test.hs. There is currently one property being tested. The property states that taking any Switch value and converting it to JSON and then back to Haskell Switch value yields the same value that you started with. Every time you run 'cabal test', the tester will generate some number (100 is the default I think) of random switch instances with which (using the random generator defined in Switch.hs) to test this property. For more info on randomized property-based testing, check out QuickCheck online.



* Related Reading on the Web:

+ Stuff about Yesod, the Haskell web app framework I am using in this example:
++ http://www.yesodweb.com/book
++ http://www.yesodweb.com/book/restful-content

+ About Aeson, the JSON library in Haskell
++ https://www.fpcomplete.com/school/starting-with-haskell/libraries-and-frameworks/text-manipulation/json
++ http://hackage.haskell.org/package/aeson-0.8.0.2/docs/Data-Aeson.html

+ https://www.haskell.org/hoogle/ , useful for searching public libraries by function, type, module, etc.

